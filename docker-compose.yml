version: '2'
networks:
  cluster:
    driver: bridge

services:
  pgnode1:
    build:
      context: .
      dockerfile: Pgsql.Dockerfile
    environment:
      POSTGRES_PASSWORD: monkey_password
      POSTGRES_USER: monkey_user
      #POSTGRES_DB: monkey_db

      #PG_CUSTOM_CONFIG: "listen_addresses:'*'"
      #PG_FORCE_CLEAN: 0

      #REPMGR_UPSTREAM_HOSTNAME
      REPMGR_HOSTNAME: node1

      REPMGR_DB: repmgr
      REPMGR_USER: repmgr
      REPMGR_PASSWORD: repmgr
      REPMGR_PORT: 5432

      REPMGR_CONNECT_TIMEOUT: 1
      REPMGR_CLUSTER_NAME: pg_cluster
      REPMGR_NODE_ID: 1
      REPMGR_NODE_NAME: node1
      REPMGR_RECONNECT_ATTEMPTS: 5
      REPMGR_RECONNECT_INTERVAL: 1
      REPMGR_MASTER_RESPONSE_TIMEOUT: 5
      REPMGR_LOG_LEVEL: INFO

      REPMGR_MASTER_LOCK_FILENAME: master.lock

      WAIT_MAX_TRIES: 10
      WAIT_SLEEP_TIME: 2

    networks:
      cluster:
        aliases:
          - node1

  pgnode2:
    build:
      context: .
      dockerfile: Pgsql.Dockerfile
    environment:
      POSTGRES_PASSWORD: monkey_password
      POSTGRES_USER: monkey_user
      #POSTGRES_DB: monkey_db

      #PG_CUSTOM_CONFIG: "listen_addresses:'*'"
      #PG_FORCE_CLEAN: 0

      REPMGR_UPSTREAM_HOSTNAME: node1
      REPMGR_HOSTNAME: node2

      REPMGR_DB: repmgr
      REPMGR_USER: repmgr
      REPMGR_PASSWORD: repmgr
      REPMGR_PORT: 5432

      REPMGR_CONNECT_TIMEOUT: 1
      REPMGR_CLUSTER_NAME: pg_cluster
      REPMGR_NODE_ID: 2
      REPMGR_NODE_NAME: node2
      REPMGR_RECONNECT_ATTEMPTS: 5
      REPMGR_RECONNECT_INTERVAL: 1
      REPMGR_MASTER_RESPONSE_TIMEOUT: 5
      REPMGR_LOG_LEVEL: INFO

      REPMGR_MASTER_LOCK_FILENAME: master.lock

      WAIT_MAX_TRIES: 10
      WAIT_SLEEP_TIME: 2

    networks:
      cluster:
        aliases:
          - node2

  pgpool:
    build:
      context: .
      dockerfile: Pgpool.Dockerfile
    environment:
      PCP_USER: pcp_user
      PCP_PASSWORD: pcp_pass
      WAIT_BACKEND_TIMEOUT: 60

      CHECK_USER: monkey_user
      CHECK_PASSWORD: monkey_password
      CHECK_PGCONNECT_TIMEOUT: 3 #timout for checking if primary node is healthy

      DB_USERS: monkey_user:monkey_password # in format user:password[,user:password[...]]
      BACKENDS: "0:pgnode1:5432:1:/var/lib/postgresql/data:ALLOW_TO_FAILOVER,1:pgnode2::::"
            # in format num:host:port:weight:data_directory:flag[,...]
            # defaults:
            #   port: 5432
            #   weight: 1
            #   data_directory: /var/lib/postgresql/data
            #   flag: ALLOW_TO_FAILOVER
      REQUIRE_MIN_BACKENDS: 1 # minimal number of backends to start pgpool (some might be unreachable)
      CONFIGS: "num_init_children:250,max_pool:4"
            # in format variable1:value1[,variable2:value2[,...]]
            # used for pgpool.conf file
    networks:
      cluster:
        aliases:
          - pgpool